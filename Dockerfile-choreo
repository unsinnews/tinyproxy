# Use the official Ubuntu base image
FROM ubuntu:latest

# Install build and runtime dependencies, including Go
RUN apt-get update && \
    apt-get install -y curl git make gcc g++ adduser ca-certificates wget tar && \
    rm -rf /var/lib/apt/lists/*

# Install Go
RUN wget https://golang.org/dl/go1.21.4.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz && \
    rm go1.21.4.linux-amd64.tar.gz

# Set up Go environment variables
ENV PATH="/usr/local/go/bin:${PATH}"

# Create choreo user with specific UID
RUN addgroup --gid 10014 choreo && \
    adduser --disabled-password --no-create-home --uid 10014 --ingroup choreo choreouser

# Clone Ollama repository
RUN git clone https://github.com/ollama/ollama.git /app

# Update golang.org/x/crypto to fix the vulnerability
RUN cd /app && \
    go get golang.org/x/crypto@v0.31.0 && \
    go mod tidy

# Build Ollama
# 安装 ROCm 运行时
RUN apt-get update && apt-get install -y rocm-opencl-runtime

# 编译时启用 ROCm 支持
RUN cd /app && \
    CGO_ENABLED=1 go build -tags=rocm -o ollama .


# Set working directory
WORKDIR /root/.ollama

# Set permissions for choreo user
RUN chown -R 10014:10014 /root/.ollama

# Set environment variables
ENV OLLAMA_HOST=0.0.0.0

# Expose port
EXPOSE 11434

# Switch to choreo user
USER 10014

ENTRYPOINT ["/app/ollama"]
CMD ["serve"]
